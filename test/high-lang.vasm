; Contrived to excercise some assembly.  TODO: Delete when there are better tests.

(import (vifne util assembler high-lang)
        (rnrs base))

(define C #xFEDCBA9876543210)
(define (P x) (* 2 x))

(set-immediate r0 (+ #x12345670 8))
(set-immediate r3 -7)
(set-multiple-immediates (group rA 'rE rF))
(data C)
(pointer (P #x55E00))
(chunk 1 -2 3 (pointer #x700) -5 6 -7
       (chunk 11 (copy 'r62 r4C) 33 44 55 66 (ior r4 r3 'r2) 88 99
              (pointer #xF00) 11 22
              'skip 44
              (set-immediate rFF 'loop) 66)
       #xFFFFFFFFFFFFFFFF #x-8000000000000000 #xB #x-C #xD #x-E #xF #x10)
(chunk-create r1D (group r0 r3 rA rE rF))

(copy r2B r1D)

(let ((c rFF) (one r1))
  (set-immediate one 1)
  (set-immediate c 5)
  (label 'loop)
  (sub r3 r3 c)
  (sub c c one)
  (jump-positive c 'loop))

(set-immediate rA8 'skip)
(jump-positive r1 rA8)   ; Unconditional jump.

(chunk-get (group rCE rCA) r2B)
(goto rCE rCA)

(label 'skip)
(ignore)
